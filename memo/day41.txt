Node.js
	Chrome V8 Javascript 엔진으로 빌드된 Javascript 런타임이다.
	즉, 노드를 통해 다양한 자바스크립트 애플리케이션을 개발 실행 할 수 있으며
	특히 서버를 개발하고 실행하는데 가장 많이 사용되는 프로그램이다.

특징
	자바스크립트 언어를 활용한 개발 및 실행 환경을 제공한다.
	Non-blocking I/O와 단일 스레드 이벤트 루프를 통해 높은 처리 성능을 갖는다.
	내장 HTTP 서버 라이브러리를 포함하고 있어 웹 서버에서 아파치 등
	별도의 소프트웨어 없이 동작 가능하도록 하는 것이 가장 큰 장점이다.

Node.js가 탄생하기 전에는 일반적으로 서버 개발은 Java 언어로
클라이언트 개발은 Javascript로 개발하는 것이 국룰이었다.
하지만, 자바스크립트 서버를 개발 가능하도록 만들어준 덕분에
프론트엔드 개발자의 개발 영역이 서버 개발자의 영역으로 넘어가게해준
가장 큰 전환점을 제공하게 되었다.

sync(동기)
	Java, c++ 등 객체지향언어가 일반적으로 대표적인 동기 방식 개발언어로
	이전 작업(로직 또는 함수 수행)이 완료되어야 다음 작업을 
	수행할 수 있는 언어를 말한다.

async(비동기)
	동기 방식의 개발 언어와 반대로 이전 작업이 완료되지 않아도 
	다음 작업을 수행하여 동시에 작업을 수행 가능하도록 하는 방식
	자바스크립트가 대표적인 비동기 방식의 개발 언어로 Node.js가
	서버에서 이 방식을 아주 잘 동작하도록 환경을 제공한다.
	이를 비동기 방식으로 논블록킹 이라고 한다.

위와 같이 일반적으로 동기 방식인 Java, c++ 등에서는 동시 작업을 위해
스레드(멀티스레드)라는 프로그래밍 기술을 사용해 동시 작업을 수행하였다.
하지만 스레드 기술은 큰 장점이 있지만 개발 난이도 및 사용상 많은
어려움으로 인해 고급 기술을 가진 사람도 다루기 쉽지 않았다.
그러나 Node.js는 하나의 스레드, 논 블로킹 모델로 하나의 스레드가 알아서
여러개의 요청을 잘 관리하여 멀티스레드처럼 동작하게 하는 
기술 덕분에 많은 개발자에게 쉽게 접근할 수 있게 했다.

